{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.8"},"colab":{"provenance":[{"file_id":"1B7pDVC3yPR-ewmlepxRMOX3ME0-HWc4K","timestamp":1699469463294},{"file_id":"129muXipKT9hSM5mv79Gt9Jfj04ZVbrL3","timestamp":1665296516853}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"v7fFun2jV4YK"},"source":["# Exam 2 Info\n","\n","Exam 2 will be in class on Wednesday, Nov 15. You will have the entire class period (110 minutes) to complete the exam. Most of the questions on Exam 2 will require coding, though there might also be some more conceptual questions. You will complete and submit your work in a Colab notebook. **You will be required to use the desktop computers in the classroom for the exam.**\n","\n"]},{"cell_type":"markdown","source":["The exam is cumulative, with an emphasis on material from Day 10: Introduction to Text Data through Day 18: Estimating Test Metrics for Classification Models"],"metadata":{"id":"FyXhu_M_R9bz"}},{"cell_type":"markdown","source":["Some of the questions on the exam might be deliberately ambiguous. I want to see how you take an ambiguous, real-world question and translate it into a concrete question that can be answered with data. For some problems, several answers might be acceptable, as long as you do a good job justifying your approach and answer. Just answer each question to the best of your ability according to _your_ interpretation of the question, and be clear about how you are interpreting the question."],"metadata":{"id":"Dwy0uewA8iYa"}},{"cell_type":"markdown","source":["You will need to know how to read in data sets from a file (e.g., `read_csv`). You will NOT be required to scrape data from webpages or APIs during the exam. However, I might give you data that I pulled from an API or webpage or you might need to use the documentation of the API or the source of the webpage."],"metadata":{"id":"A5KpMQoa82gF"}},{"cell_type":"markdown","source":["## What is allowed during the exam\n","\n","- You are allowed to use your own notes, electronic or hard copy, as long as they are your own original notes and not just copies of other sources.\n","- You are allowed to use all course content posted in Canvas without citation.\n","- You are allowed to use the internet and consult outside resources.  However, you must CITE any outside resources that you consult and include references.  Also, consulting is not copying.  Your can consult and cite references, but your work must be original. Moreover, copying material - including computer code - from outside sources is plagiarism.\n","- In particular, **if you consult any websites outside of Canvas or the course Colab notebooks, be sure to site those websites by providing the link.**\n","\n","## What is NOT allowed during the exam\n","\n","- You are NOT allowed to post questions to internet websites, such as (but not limited to) Chegg.com.\n","- You are NOT allowed to post questions from assignments to any AI, such as (but not limited to) ChatGPT or GPT-4.\n","- You are NOT allowed to copy material from outside sources.  Your can consult sources, but you must CITE any sources that you consult and include references.  Moreover, copying material - including computer code - from outside sources is plagiarism.\n","- You are NOT allowed to communicate with anyone during exams.\n","- You are NOT allowed to use any devices except for the desktop computers (unless you have DRC accommodations that you have discussed with me).\n","\n","One example: you are allowed to use Google to find the documentation for a Pandas function to see what arguments are available, but you need to cite the websites you visit. You are NOT allowed to ask Google or AI or whatever to write the code for you.\n","\n","**If you are not sure if something is allowed, ASK ME before doing it.**"],"metadata":{"id":"XMQ91_cUwWwr"}},{"cell_type":"markdown","source":["## Prepaing for the Exam\n","\n","You should start by reviewing the reading, in class notebooks, and assignments. Those items provide the most representative sample of the kinds of problems you will see on the exam.\n","\n","There are also a few practice problems below. These are just a few examples of the kinds of problems you might see on the exam. This is NOT a representative sample of problems, and certainly NOT an exhaustive list of the kinds of problems you'll see on the exam. Do NOT study only the following problems."],"metadata":{"id":"eofNv3t19RAg"}},{"cell_type":"markdown","source":["## Problem\n","\n","Your friends Walter and Anna are considering buying one of 2 homes. To determine the fair price of these 2 homes, Walter obtains a DataFrame, `df_housing`, consisting of data about 100 recently purchased homes in the area. He trains a linear regression model to predict the sale prices of these homes, using the features: square footage, number of bedrooms, number of bathrooms, and the house style - a categorical variable with 5 categories.\n","\n","Here is Walter's code for fitting the model.\n","\n","```\n","X_train = pd.get_dummies(df_housing[[\"sqft\", \"bed\", \"bath\", \"style\"]])\n","y_train = df_housing[\"price\"]\n","model = LinearRegression()\n","model.fit(X_train, y_train)\n","```\n"],"metadata":{"id":"4idtb9urdrYx"}},{"cell_type":"markdown","source":["a) The data for the two homes that Walter is considering buying are stored in a different DataFrame, `df_new_homes`. Explain why the following code would not necessarily produce the correct predictions from the fitted\n","model above.\n","\n","```\n","X_test = pd.get_dummies(df_new_homes[[\"sqft\", \"bed\", \"bath\", \"style\"]])\n","model.predict(X_test)\n","```"],"metadata":{"id":"mtcdDHx7iQy3"}},{"cell_type":"markdown","source":["b) Walter trains his model using only the first 50 observations and evaluates the model based on the remaining 50 observations.\n","\n","```\n","model.fit(X_train.iloc[:50], y_train.iloc[:50])\n","mean_squared_error(y_train.iloc[50:], model.predict(X_train.iloc[50:]))\n","```\n","\n","Explain why and how Walter could improve his evaluation process. You should NOT write code; explain in words."],"metadata":{"id":"NBtb2sE8UIc8"}},{"cell_type":"markdown","source":["c) Anna fits a 2-nearest neighbors regression model to predict price from square footage, number of bedrooms, number of bathrooms, and the house style. You can assume that the model is fit correctly.\n","\n","Suppose that the training data consists only of the following 5 houses.\n","\n","| **price** | **sqft** | **bed** | **bath** |     **style** |\n","|----------:|---------:|--------:|---------:|--------------:|\n","|    700000 |     2000 |       3 |        2 | single family |\n","|    800000 |     2800 |       4 |      1.5 | single family |\n","|    500000 |     2000 |       3 |        2 |         condo |\n","|    550000 |     2000 |       3 |        3 |         condo |\n","|    600000 |     1800 |       3 |      1.5 | single family |\n","\n","What price would this model predict for a 1500 square foot, 3 bedroom, 1.5 bathroom single family home? Provide a value and explain your reasoning."],"metadata":{"id":"NFWTQ8z3uxQw"}},{"cell_type":"markdown","source":["d) Anna fits a $k$-nearest neighbors regression model to predict sales price, for different values of $k$, using the training data on the 100 houses in `df_housing`. Here is Anna's code; you can assume that appropriate steps are included in `...` below.\n","\n","```\n","X_train = ...\n","y_train = ...\n","\n","pipeline = (...,\n","            KNeighborsRegressor(n_neighbors = k))\n","pipeline.fit(X_train, y_train)\n","```\n","\n","There are two code snippets below, (A) and (B). For each code snippet choose the curve (1, 2, 3, 4) in the plot below that the code snippet produces as Anna varies values of $k$. (Two curves will be left out.) Clearly identify your choices and explain your reasoning.\n","\n","(A) `-cross_val_score(pipeline, X_train, y_train, cv = 10, scoring = neg_mean_squared_error).mean()`\n","\n","(B) `((y_train - pipeline.predict(X_train)) ** 2).mean()`"],"metadata":{"id":"e-ZXkZRGl3i6"}},{"cell_type":"markdown","source":["<img src = 'https://drive.google.com/uc?id=1ZIhkTmJqFcby5OHzSIY8_tT1R5hEar2X'>"],"metadata":{"id":"Oq5TgpBkTV0Q"}},{"cell_type":"markdown","source":["## Problem\n","\n","This question involves the wines data set (https://dlsun.github.io/pods/data/wines.csv) which contains data about the chemical composition of various wines. We want to use $k$-nearest neighbors to predict the color (red or white) of a wine using the two features: **sulphates** and **alcohol**.\n","\n","Find the value of $k$ between 1 and 20 that optimizes the average precision score."],"metadata":{"id":"2gQ-rA1TA7bO"}},{"cell_type":"markdown","source":["## Problem\n","\n","The following two data sets contain data retrieved using the [Bing Maps API](https://docs.microsoft.com/en-us/bingmaps/rest-services/getting-started-with-the-bing-maps-rest-services).\n","\n","- (1) A data set retrieved using the  [Traffic API](https://docs.microsoft.com/en-us/bingmaps/rest-services/traffic/) of traffic incidents in California (in `mapArea`, the bounding box for California is 32.534156, -124.409591, 42.009518, -114.131211.): http://users.csc.calpoly.edu/~dsun09/data301/traffic_incidents.csv. [This page](https://docs.microsoft.com/en-us/bingmaps/rest-services/traffic/traffic-incident-data) provides information about the fields that are returned by the Traffic API.\n","\n","- (2) A subset of the data set consisting only of construction incidents, along with the elevation obtained using the [Elevations API](https://docs.microsoft.com/en-us/bingmaps/rest-services/elevations/get-elevations): http://users.csc.calpoly.edu/~dsun09/data301/construction_with_elevations.csv.\n","\n","\n","Using the construction incidents data set (2), you want to train a $5$-nearest neighbor model that predicts the **severity** of a construction incident. Consider two models, with the following features,\n","\n","- (A) **description** and **roadClosed**\n","- (B) **description**, **roadClosed**, and **elevation**\n","\n","Which of these two models would you prefer? Justify your choice with appropriate analysis."],"metadata":{"id":"kRWUDK0QbpW1"}},{"cell_type":"markdown","metadata":{"id":"HhdGNxizUWUu"},"source":["## Problem\n","\n","Consider the OKCupid data set available at https://dlsun.github.io/pods/data/okcupid.csv, and the data documentation is [available here](https://github.com/rudeboybert/JSE_OkCupid/raw/master/okcupid_codebook.txt).\n","\n","Study the profile of user 2855 in the data set, especially what they wrote in `essay9` about what they are looking for in a partner. Recommend five users in this data set that you think would be most compatible with this user."]}]}